^([a-z]+) +\1 +[a-z]+ [0-9]
([a-z]+) +\1 +[a-z]+ [0-9]
q()
find packages("devtools")
find package("devtools")
find.package("devtools")
find.package()
install.packages("devtools")
find.page("devtools")
find.package("devtools")
install.packages("swirl")
library("swirl")
swirl()
5+7
x<5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
c?
c()?
?c
?c
z c
zc
z c()
z c()
z y
z x
z
c(z,555)
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
a<-c(1,2,3,4)
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
1:20
pi:10
15:1
`:`
":"
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq(5,10,length=30)
my_seq<-(5,10,length=30)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
req(0,times=40)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect<-c(0.5,55,-10,6)
tf<-(num_vect<1)
tf<-num_vect<1
tf
num_vect>=6
my_char(c("My","name","is"))
my_char<-(c("My","name","is"))
my_char<-c("My","name","is")
my_char
paste(my_char, collapse=" ")
my_name<-c(my_char,"yueming")
my_name
past(my_name, collapse=" ")
paste(my_name, collapse=" ")
paste("Hello","world!",sep=" ")
paste(c("x","y","z"),1:3,collapse="")
paste(1:3,c("x","y","z"),collapse="")
paste(1:3,c("x","y","z"),sep="")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="_")
paste(LETTERS,1:4,sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data=NA
my_data==NA
sum(my_na)
my_data
0/0
inf/inf
Inf/Inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
c(x[3],x[5],x[7])
a[c(3,5,7)]
info()
a<-c(3,5,7)
a<-c[(3,5,7)]
a<-c(3, 5, 7)
skip()
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(foo)
names(vect)
vect2<-c(11,2,NA)
names(vects)<-c("foo","bar","norf")
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-c(1:20)
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<my_vector
my_matrix<-my_vector
?matrix()
?matrix
my_matrix2<-matrix(1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patient<-c("Bill","Gina","Kelly","Sean")
patients<-c("Bill","Gina","Kelly","Sean")
cbine(patients,my_matrix)
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(cnames)
colnames(my_data)<-cnames
my_data
library("swirl")
swirl()
library(swirl)
install_from_swirl("Data Analysis")
swirl()
add2<-function(x,y){
x+y
}
above<-function(x,n){
use<-x>n
x[use]
}
above(3,6)
above(12,10)
colunmnmean<-function(y,removeNA=TRUE){
nc<-ncol(y)
means<-numeric(nc)
for(i in 1:nc){
means[i]<-mean(y[,i],na.rm=removeNA)
}
means
}
colunmnmean(airquality)
install.packages("swirl")
library("swirl")
swirl()
install.packages("swirl")
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
swirl()
?read.csv
read.csv(path2csv,stringsAsFactors = FALSE)
mydf=read.csv(path2csv, stringsAsFactors = FALSE)
mydf = read.csv(path2csv, stringsAsFactors = FALSE)
info()
skip()
bye()
swirl()
main()
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran<-tbl_df(mydf)
rm("mydf")
cran(tbl_df)
?tbl_df
cran
?manip
select(cran, ip_id,
| package, country)
select(cran, ip_id,package, country)
mian()
main()
5:20
select(cran, r_arch:country)
select(cran,country:r_arch)
cran
select(cran, -time)
select(-x:-size)
select(-X:-size)
-5:20
-(5:20)
select-(x:size)
select(-(x:size))
select(cran, -(x:size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version ==
| "3.1.1", country == "US")
filter(cran, r_version =="3.1.1", country == "US")
?Comparison (that's an uppercase C)
?comparison(that's an uppercase c')
comparison(that's an uppercase C)
?comparison (that's an uppercase C)
?comparison (that's an uppercase C)
?Comparison
filter(cran, r_version =="3.0.2", country == "IN")
filter(cran, r_version <="3.0.2", country == "IN")
filter(cran, country == "US" | country
| == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 | r_os == "linux-gnu")
filter(cran, size > 100500 , r_os == "linux-gnu")
is.na(c(3,5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, r_version !=is.na())
filter(cran, r_version !is.na())
filter(cran, r_version =!is.na())
filter(cran, r_version =!is.na(1))
filter(cran, !is.na(r_version))
cran2<-select(cran,size:ip_id)
arrange(cran2, ip_id)
desc(ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package,ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3(cran,ip_id,package,size)
cran3<-(cran,ip_id,package,size)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20，zise_gb=size_mb/2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
cran3
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(Matrix)
links <- list(c(2,3,4,5,7),c(1),c(1,2),c(2,3,5),c(1,3,4,6),c(1,5),c(5))  ## 网页链接关系
toMatrix.links <- function(links) {
nodes <- 1:length(links)
res <- Matrix(0,nrow=length(nodes),ncol=length(nodes),sparse=TRUE)
idx <- unlist(links)+rep((1:length(nodes))-1,times=sapply(links,length))*length(nodes)
res[idx] <- 1
res <- t(t(res)/colSums(res))
return(res)
}
pageRank.naive <- function(links) {
trans.Matrix <- toMatrix.connection(links)
res <- eigen(trans.Matrix)
return(list(val=res$values[1],vec=res$vectors[,1]))
}
pageRank.naive(links)
？toMatrix.connection
version
install.packages(c("dplyr", "httpuv", "httr", "jsonlite"))
jsonData <- fromJSON(req$url)
library(rjson)
library(R.utils)
install.packages("R.utils")
library(R.utils)
install.packages("R.oo")
library(R.utils)
library(R.oo)
library(R.oo)
install.packages("C:/Users/yueming sun/Downloads/R.utils_1.34.0.zip", repos = NULL)
library(R.utils)
install.packages("C:/Users/yueming sun/Downloads/R.oo_1.18.0.zip", repos = NULL)
library(R.utils)
unzip("./data/exdata-data-NEI_data.zip", exdir = "./data/")
unz("./data/exdata-data-NEI_data.zip", exdir = "./data/")
unz("./data/exdata-data-NEI_data.zip", "./data/exdir")
getwd()
setwd("G:/Data Science Speciality Track/Exploratory Data Analysis/EXData_PeerAssessement_2")
getwd()
unz("./data/exdata-data-NEI_data.zip", "./data/exdir")
unz("./data/exdata-data-NEI_data.zip", "./data/exdir")
if (!"neiData" %in% ls()) {
neiData <- readRDS("./data/summarySCC_PM25.rds")
}
setwd("G:/Data Science Speciality Track/Exploratory Data Analysis/EXData_PeerAssessement_2")
if (!"neiData" %in% ls()) {
neiData <- readRDS("./data/summarySCC_PM25.rds")
}
neiData <- readRDS("./data/summarySCC_PM25.rds")
neiData <- readRDS("./data/summarySCC_PM25.rds")
neiData <- readRDS("./data/exdata-data-NEI_data/summarySCC_PM25.rds")
head(neiData)
dim(neiData)
dim(sccData)
if (!"neiData" %in% ls()) {
neiData <- readRDS("./data/exdata-data-NEI_data/summarySCC_PM25.rds")
}
dim(neiData)
if (!"sccData" %in% ls()) {
sccData <- readRDS("./data/Source_Classification_Code.rds")
}
if (!"sccData" %in% ls()) {
sccData <- readRDS("./data/exdata-data-NEI_data/Source_Classification_Code.rds")
}
par("mar"=c(5.1, 4.5, 4.1, 2.1))
png(filename = "./figure/plot1.png",
width = 480, height = 480,
units = "px")
totalEmissions <- aggregate(neiData$Emissions, list(neiData$year), FUN = "sum")
# options(scipen=0)
# options(scipen=999)
plot(totalEmissions, type = "l", xlab = "Year",
main = "Total Emissions in the United States from 1999 to 2008",
ylab = expression('Total PM'[2.5]*" Emission"))
dev.off()
?png()
library(grDevices)
par("mar"=c(5.1, 4.5, 4.1, 2.1))
png(filename = "./figure/plot1.png",
width = 480, height = 480,
units = "px")
totalEmissions <- aggregate(neiData$Emissions, list(neiData$year), FUN = "sum")
# options(scipen=0)
# options(scipen=999)
plot(totalEmissions, type = "l", xlab = "Year",
main = "Total Emissions in the United States from 1999 to 2008",
ylab = expression('Total PM'[2.5]*" Emission"))
dev.off()
par("mar"=c(5.1, 4.5, 4.1, 2.1))
png(filename = "./figure/plot1.png",
width = 480, height = 480,
units = "px")
png(filename = "./figure/plot1.png",width = 480, height = 480,units = "px")
png(filename = "./plot1.png",width = 480, height = 480,units = "px")
totalEmissions <- aggregate(neiData$Emissions, list(neiData$year), FUN = "sum")
plot(totalEmissions, type = "l", xlab = "Year",
main = "Total Emissions in the United States from 1999 to 2008",
ylab = expression('Total PM'[2.5]*" Emission"))
par("mar"=c(5.1, 4.5, 4.1, 2.1))
png(filename = "./plot1.png",width = 480, height = 480,units = "px")
totalEmissions <- aggregate(neiData$Emissions, list(neiData$year), FUN = "sum")
# options(scipen=0)
# options(scipen=999)
plot(totalEmissions, type = "l", xlab = "Year",
main = "Total Emissions in the United States from 1999 to 2008",
ylab = expression('Total PM'[2.5]*" Emission"))
dev.off()
subset <- neiData[neiData$fips == "24510", ]
png(filename = "./figure/plot2.png",
width = 480, height = 480,
units = "px")
totalEmissions <- aggregate(subset$Emissions, list(subset$year), FUN = "sum")
plot(totalEmissions, type = "l", xlab = "Year",
main = "Total Emissions in Baltimore City from 1999 to 2008",
ylab = expression('Total PM'[2.5]*" Emission"))
dev.off()
par("mar"=c(5.1, 4.5, 4.1, 2.1))
png(filename = "./figure/plot1.png",width = 480, height = 480,units = "px")
totalEmissions <- aggregate(neiData$Emissions, list(neiData$year), FUN = "sum")
# options(scipen=0)
# options(scipen=999)
plot(totalEmissions, type = "l", xlab = "Year",
main = "Total Emissions in the United States from 1999 to 2008",
ylab = expression('Total PM'[2.5]*" Emission"))
dev.off()
subset <- neiData[neiData$fips == "24510", ]
library(ggplot2)
par("mar"=c(5.1, 4.5, 4.1, 2.1))
png(filename = "./figure/plot3.png",
width = 480, height = 480,
units = "px")
g <- ggplot(subset, aes(year, Emissions, color = type))
g + geom_line(stat = "summary", fun.y = "sum") +
ylab(expression('Total PM'[2.5]*" Emissions")) +
ggtitle("Total Emissions in Baltimore City from 1999 to 2008")
dev.off()
head(sccData$Short.Name)
par("mar"=c(5.1, 4.5, 4.1, 2.1))
png(filename = "./figure/plot4.png",
width = 480, height = 480,
units = "px")
coal <- grep("coal", sccData$Short.Name, ignore.case = T)
coal <- sccData[coal, ]
coal <- neiData[neiData$SCC %in% coal$SCC, ]
coalEmissions <- aggregate(coal$Emissions, list(coal$year), FUN = "sum")
plot(coalEmissions, type = "l", xlab = "Year",
main = "Total Emissions From Coal Combustion-related\n Sources from 1999 to 2008",
ylab = expression('Total PM'[2.5]*" Emission"))
dev.off()
subset <- neiData[neiData$fips == "24510", ]
par("mar"=c(5.1, 4.5, 4.1, 2.1))
png(filename = "./figure/plot5.png",
width = 480, height = 480,
units = "px")
motor <- grep("motor", sccData$Short.Name, ignore.case = T)
motor <- sccData[motor, ]
motor <- subset[subset$SCC %in% motor$SCC, ]
motorEmissions <- aggregate(motor$Emissions, list(motor$year), FUN = "sum")
plot(motorEmissions, type = "l", xlab = "Year",
main = "Total Emissions From Motor Vehicle Sources\n from 1999 to 2008 in Baltimore City",
ylab = expression('Total PM'[2.5]*" Emission"))
dev.off()
subset <- neiData[neiData$fips == "24510"|neiData$fips == "06037", ]
library(ggplot2)
par("mar"=c(5.1, 4.5, 4.1, 2.1))
png(filename = "./figure/plot6.png",
width = 480, height = 480,
units = "px", bg = "transparent")
motor <- grep("motor", sccData$Short.Name, ignore.case = T)
motor <- sccData[motor, ]
motor <- subset[subset$SCC %in% motor$SCC, ]
g <- ggplot(motor, aes(year, Emissions, color = fips))
g + geom_line(stat = "summary", fun.y = "sum") +
ylab(expression('Total PM'[2.5]*" Emissions")) +
ggtitle("Comparison of Total Emissions From Motor\n Vehicle Sources in Baltimore City\n and Los Angeles County from 1999 to 2008") +
scale_colour_discrete(name = "Group", label = c("Los Angeles","Baltimore"))
dev.off()
